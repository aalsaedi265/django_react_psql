
## breakdown

hello this is full stack note application the goal here is to refresh my react magic and learn django( express node of python).

the backend will have api calls, store data, and handle different users 
the front end is the api interaction feature; sign in sign out

psycopg2 is for working with postgres sql database


 manage.py is automatically created in each Django project. It does the same thing as django-admin but also sets the DJANGO_SETTINGS_MODULE environment variable so that it points to your projectâ€™s settings.py file.

serlizer 
    - will be used to store credentails so it can be used for log in later
    - orm (obj relation map) will map py code to make changes to database
    - take py obj convert to json & send it becuase json can communicate with other application once reponse returned conver to py run program



axios 
  network request


backend setting when ready finisehd working  and repair it

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         "NAME": os.getenv("DB_NAME"),
#         "USER": os.getenv("DB_USER"),
#         "PASSWORD": os.getenv("DB_PWD"),
#         "HOST": os.getenv("DB_HOST"),
#         "PORT": os.getenv("DB_PORT"),
#     }
# }



### notes

py -m venv nameOfEnv

pip install -r .\requirments.txt

django-admin startproject dirNameUwant

py manage.py startapp api

py manage.py makemigrations (backend directory)
py manage.py migrate
  after many changes so Django propagates changes to models into the database structure


py manage.py runserver

in frontend env be sure to a sign vite_api to backend api link to server